node {
  // job
  try {
    def commit_id
    stage('Preparation') {
      checkout scm
      sh 'git rev-parse --short HEAD > .git/commit-id'
      commit_id = readFile('.git/commit-id').trim()
      slackSend (color: '#00FF00', message: "Preparation stage passed")
    }
    stage('test') {
      nodejs(nodeJSInstallationName: 'nodejs') {
        sh 'npm install --only=dev'
        sh 'npm test'
      }
      slackSend (color: '#00FF00', message: "Test stage passed")
    }
    stage('docker build/push') {
      docker.withRegistry('https://index.docker.io/v2/', 'dockerhub') {
        def app = docker.build("atulkanhasoft/docker-nodejs-demo:${commit_id}", '.').push()
      }
      slackSend (color: '#00FF00', message: "docker build/push stage passed")
    }
    slackSend (color: '#00FF00', message: "Success: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
  } catch (e) {
    // mark build as failed
    currentBuild.result = 'FAILURE'
    // send slack notification
    slackSend (color: '#FF0000', message: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")

    // throw the error
    throw e
  }
}
